NANDINI PHARMA - Pharmaceutical E-commerce Website

Project Structure:
- index.html: Homepage with categories and featured products
- products.html: All products with filtering and search
- cart.html: Shopping cart management
- checkout.html: Order placement and payment
- track-order.html: Order tracking functionality
- order-history.html: Previous orders list
- login.html: Email OTP login/signup
- admin.html: Admin dashboard for users and orders

Features:
1. Product categories: Tablets, Syrups, Suspensions, Injections, Generic Items
2. Shopping cart with add/remove/update quantity
3. Order tracking system
4. Order history
5. Responsive design for mobile devices
6. Local storage for cart persistence; optional DB sync when logged in

Backend, Auth, and Database (Free)
- Supabase (free) is integrated for Auth + Postgres DB.
- Copy js/supabase-config.example.js to js/supabase-config.js and set values.
- Include Supabase CDN (already in pages).
- Email OTP login; OTP sends logged to user_otp.
- user_data stores profiles; user_cart stores cart; user_orders stores orders.
  Order statuses: failed, processing, placed, delivered.

Setup Steps
1) Create Supabase project at https://supabase.com, get Project URL and anon key.
2) In Supabase SQL editor, run schema from db-schema.sql (create this file from below section).
3) Copy js/supabase-config.example.js to js/supabase-config.js and paste your URL/key.
4) Open login.html, send OTP to sign in (check email link to complete).
5) Use the site; cart and orders persist for logged-in users.
6) Visit admin.html to view users and orders, and update order status.

Database Schema (SQL)
-- Run in Supabase SQL editor
create table if not exists user_data (
  id bigint generated by default as identity primary key,
  user_id uuid unique not null,
  email text,
  created_at timestamp with time zone default now()
);

create table if not exists user_otp (
  id bigint generated by default as identity primary key,
  email text not null,
  channel text not null default 'email',
  sent_at timestamp with time zone default now()
);

create table if not exists user_cart (
  id bigint generated by default as identity primary key,
  user_id uuid not null,
  product_id bigint not null,
  packaging_type text not null,
  name text,
  price numeric,
  image text,
  quantity int not null default 1,
  updated_at timestamp with time zone default now(),
  unique(user_id, product_id, packaging_type)
);

create table if not exists user_orders (
  id bigint generated by default as identity primary key,
  user_id uuid not null,
  order_id text unique not null,
  status text not null check (status in ('failed','processing','placed','delivered')),
  items jsonb not null,
  total text,
  shipping jsonb,
  created_at timestamp with time zone default now()
);

-- Row Level Security & policies
alter table user_data enable row level security;
alter table user_otp enable row level security;
alter table user_cart enable row level security;
alter table user_orders enable row level security;

create policy "user can view own profile" on user_data for select using (auth.uid() = user_id);
create policy "upsert own profile" on user_data for insert with check (auth.uid() = user_id);
create policy "upsert own profile update" on user_data for update using (auth.uid() = user_id);

create policy "log otp any" on user_otp for insert with check (true);

create policy "manage own cart" on user_cart for all using (auth.uid() = user_id) with check (auth.uid() = user_id);

create policy "manage own orders" on user_orders for all using (auth.uid() = user_id) with check (auth.uid() = user_id);

Free Hosting
- Netlify or Vercel free tiers: drag-drop folder or connect repo and deploy.

Notes
- For production, restrict admin.html via Supabase RBAC or an admin flag in user_data and policies.
- Frontend still works without Supabase; persistence falls back to localStorage only.